name: Build Solar System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-tests:
    name: Unit Testing
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
    env:
      MONGO_URI: 'mongodb://127.0.0.1:27017/superData'
      MONGO_USERNAME: ${{ vars.MONGO_TEST_USERNAME }}
      MONGO_PASSWORD: ${{ secrets.MONGO_TEST_PASSWORD }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up NodeJs
      uses: actions/setup-node@v4

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Test
      run: npm test

    - name: Archive Test Results
      uses: actions/upload-artifact@v4
      with:
        name: mocha-test-results
        path: test-results.xml

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    container:
      image: node:18
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        options:
          --name mongo
    env:
      MONGO_URI: 'mongodb://mongo:27017/superData'
      MONGO_USERNAME: ${{ vars.MONGO_TEST_USERNAME }}
      MONGO_PASSWORD: ${{ secrets.MONGO_TEST_PASSWORD }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Test Coverage
      run: npm run coverage
      continue-on-error: true

    - name: Archive Test Results
      uses: actions/upload-artifact@v4
      with:
        name: coverage-results
        path: coverage
        retention-days: 5

  docker:
    name: docker
    needs: [unit-tests, test-coverage]

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

  dev-deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.31.0'
        id: install

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWSACCOUNTID }}
          aws-secret-access-key: ${{ secrets.AWSSECRET }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name ${{ vars.KUBE_CLUSTER }}

      - name: Fetch Kube Details
        run: |
          kubectl version
          echo -----------------------
          kubectl get nodes

      - name: Get Kube LoadBalancer HostName
        run: |
          echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')" >> $GITHUB_ENV

      - name: Replace Tokens In Manifest Files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}

      - name: Check Files
        run: |
          cat kubernetes/development/*.yaml
